{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"av",
				"avg_word_length	(create_files.py)"
			],
			[
				"logisit",
				"LogisticRegression	class"
			],
			[
				"Test",
				"TestFoo	class"
			],
			[
				"n_digits",
				"n_digit_products	statement"
			],
			[
				"com",
				"command_line_tool	(grade.py)"
			],
			[
				"find",
				"find_module	(grade.py)"
			],
			[
				"arg",
				"argv	instance"
			],
			[
				"for",
				"format_exc"
			],
			[
				"except",
				"Exception	class"
			],
			[
				"Val",
				"ValueError	class"
			],
			[
				"edge",
				"edge_weight	(numila.py)"
			],
			[
				"ST",
				"STDOUT	statement"
			],
			[
				"production",
				"production_func"
			],
			[
				"fla",
				"flatten_parse	function"
			],
			[
				"chek",
				"check_output	function"
			],
			[
				"id",
				"id_string	statement"
			],
			[
				"pars",
				"parse_utterance"
			],
			[
				"grammar",
				"grammar_string	param"
			],
			[
				"File",
				"FileNotFoundError	class"
			],
			[
				"pr",
				"print	function"
			],
			[
				"assertEqual",
				"assertEquals	statement"
			],
			[
				"pea",
				"pearsonr	function"
			],
			[
				"FPE",
				"FTP_PREFERENCE	statement"
			],
			[
				"test",
				"test_list_max	int list -> bool"
			],
			[
				"metric_",
				"metric_functions"
			],
			[
				"extra",
				"extract_completions"
			],
			[
				"classif",
				"classification_matrix	function"
			],
			[
				"v",
				"validation_corpora	statement"
			],
			[
				"genr",
				"genre_directory	function"
			],
			[
				"dir",
				"dir_to_tokens	function"
			],
			[
				"per",
				"perplexity"
			],
			[
				"unig",
				"unigram_distribution"
			],
			[
				"pe",
				"perplexity"
			],
			[
				"rooms_items",
				"rooms_items	state -> (room * item list) list"
			],
			[
				"new",
				"new_state"
			],
			[
				"print",
				"print_endline"
			],
			[
				"remove",
				"remove_assoc	'a -> ('a * 'b) list -> ('a * 'b) list"
			],
			[
				"expl",
				"explode"
			],
			[
				"exp",
				"explode"
			],
			[
				"unicode",
				"UnicodeDecodeError	class"
			],
			[
				"unico",
				"unicode_to_latex"
			],
			[
				"st",
				"stdout	class"
			],
			[
				"ge",
				"get_id	function"
			],
			[
				"re",
				"read_file	function"
			],
			[
				"py",
				"pyplot	module"
			],
			[
				"to",
				"to_csv	function"
			],
			[
				"key",
				"KeyboardInterrupt	class"
			],
			[
				"ini",
				"initializer	param"
			],
			[
				"di",
				"distance"
			],
			[
				"sub",
				"sublime_plugin	module"
			],
			[
				"writer",
				"writerows	function"
			],
			[
				"knn",
				"knn_predictions	statement"
			],
			[
				"log",
				"log_predictions	statement"
			],
			[
				"k",
				"knn_predictions	statement"
			],
			[
				"lin",
				"linear_model	module"
			],
			[
				"Kn",
				"KNeighborsClassifier	class"
			],
			[
				"_re",
				"_reduction_method"
			],
			[
				"gau",
				"gaussian_filter	function"
			],
			[
				"reduction",
				"reduction_method"
			],
			[
				"_reduction",
				"_reduction_method	statement"
			],
			[
				"red",
				"reduction	param"
			],
			[
				"comp",
				"compress	param"
			],
			[
				"main",
				"maintain_data	param"
			],
			[
				"redu",
				"reduction_method"
			],
			[
				"Make",
				"MakeRhymeDict"
			],
			[
				"student",
				"student_dict	statement"
			],
			[
				"studen",
				"student_dict	statement"
			],
			[
				"stu",
				"student_dict	statement"
			],
			[
				"solution",
				"solution_dict	statement"
			],
			[
				"Mak",
				"MakeRhymeDict"
			],
			[
				"run",
				"run_experiment	function"
			],
			[
				"ru",
				"run_experiment	function"
			],
			[
				"custo",
				"custom_script	function"
			],
			[
				"wrong",
				"wrong_text"
			],
			[
				"wron",
				"wrong_text"
			],
			[
				"stude",
				"student_sonnet	statement"
			],
			[
				"is",
				"isinstance	function"
			],
			[
				"get",
				"getattr	function"
			],
			[
				"in",
				"inarray	$.inArray()"
			],
			[
				"la",
				"lazy_property"
			],
			[
				"fea",
				"feature"
			],
			[
				"writ",
				"writeheader	function"
			],
			[
				"Dict",
				"DictWriter	class"
			],
			[
				"cro",
				"cross_validation"
			],
			[
				"voxels",
				"voxels2"
			],
			[
				"fuzzy_v",
				"fuzzy_voxels"
			],
			[
				"fuzzy_voxels",
				"fuzzy_voxels_list"
			],
			[
				"voxel",
				"voxels1"
			],
			[
				"quer",
				"query_points"
			],
			[
				"ex",
				"ex_files〔variable〕"
			],
			[
				"erro",
				"error_line〔variable〕"
			],
			[
				"subpro",
				"_subprocess〔module〕"
			],
			[
				"creat",
				"createExpTestFiles〔function〕"
			],
			[
				"break",
				"break_average"
			],
			[
				"dist",
				"distributed"
			],
			[
				"localist",
				"localist_encoding〔variable〕"
			],
			[
				"crea",
				"createFiles〔function〕"
			],
			[
				"local",
				"localist_encoding"
			],
			[
				"distri",
				"distributed_encoding〔variable〕"
			],
			[
				"distribu",
				"distributed_in"
			],
			[
				"percen",
				"percent_hetero〔variable〕"
			],
			[
				"het",
				"hetero_prior"
			],
			[
				"reds",
				"reds_in_hetero〔variable〕"
			],
			[
				"sam",
				"sampleUniverseObservations〔function〕"
			],
			[
				"rand",
				"random"
			],
			[
				"tota",
				"total_average"
			],
			[
				"hig",
				"highest_activation"
			],
			[
				"navigation_",
				"navigation_voxels〔variable〕"
			],
			[
				"create",
				"createNiiFiles〔function〕"
			],
			[
				"param",
				"parameters"
			],
			[
				"old",
				"old_val〔variable〕"
			],
			[
				"exec",
				"execHelper〔function〕"
			],
			[
				"_new",
				"_new_value〔variable〕"
			],
			[
				"eval",
				"evalExpression"
			],
			[
				"word",
				"word_boundaries〔argument〕"
			],
			[
				"wor",
				"word_boundaries"
			],
			[
				"loc",
				"localist_encoding〔variable〕"
			],
			[
				"num",
				"num_test"
			],
			[
				"dis",
				"distributed_in"
			],
			[
				"gene",
				"generateTraining〔module〕"
			],
			[
				"add",
				"addPoints"
			],
			[
				"give",
				"giveFeedback"
			],
			[
				"f",
				"formatCorpus"
			],
			[
				"oup",
				"output_frames〔variable〕"
			],
			[
				"output",
				"output_frames〔variable〕"
			],
			[
				"out",
				"output_frames〔variable〕"
			],
			[
				"oupt",
				"output_frames"
			],
			[
				"h",
				"highest_activation"
			]
		]
	},
	"buffers":
	[
		{
			"file": "create_files.py",
			"settings":
			{
				"buffer_size": 7281,
				"line_ending": "Unix"
			}
		},
		{
			"file": "experiment.py",
			"settings":
			{
				"buffer_size": 3744,
				"line_ending": "Unix"
			}
		},
		{
			"file": "segmentation.py",
			"settings":
			{
				"buffer_size": 5171,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{'boundary_F': 0.42361761949390814, 'boundary_precision': 0.2842767295597484, 'boundary_recall': 0.8308823529411765}\n{'word_recall': 0.3897058823529412, 'boundary_recall': 0.7389705882352942, 'boundary_F': 0.6779089376053963, 'word_precision': 0.3302180685358255, 'boundary_precision': 0.6261682242990654, 'word_F': 0.35750421585160197}\n\nDANISH\n{'boundary_F': 0.4467483506126296, 'boundary_precision': 0.31432360742705573, 'boundary_recall': 0.7719869706840391}\n{'word_recall': 0.04234527687296417, 'boundary_recall': 0.31596091205211724, 'boundary_F': 0.3089171974522293, 'word_precision': 0.040498442367601244, 'boundary_precision': 0.30218068535825543, 'word_F': 0.041401273885350316}",
			"settings":
			{
				"buffer_size": 687,
				"line_ending": "Unix",
				"name": "{'boundary_F': 0.42361761949390814, 'boundary_prec"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Main",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				],
				[
					"Packages/User/mypy.sublime-build",
					""
				]
			],
			[
				"Packages/Python 3/Python3.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Main",
					""
				],
				[
					"Tests",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				],
				[
					"Packages/User/mypy.sublime-build",
					""
				]
			],
			[
				"Packages/Python 3/Python3.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				],
				[
					"Packages/User/mypy.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Main",
					""
				],
				[
					"Tests",
					""
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					""
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Run"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Native Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: JSON"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Plain Text"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML 5"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow - PDF"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: ConTeXt"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Groff Man"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: MediaWiki Markup"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Textile"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Emacs Org-Mode"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: GNU Texinfo"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DocBook XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenDocument XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenOffice Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Word Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB Book"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB3"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: FictionBooks 2"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: AsciiDoc"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slidy HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slideous HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DZSlides HTML5/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: S5 HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Rich Text (RTF)"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Beamer with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML5 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Reveal.js Slideshow"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/Marked2.sublime-build",
					""
				]
			],
			[
				"Packages/Pandown/Pandown Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Main",
					""
				],
				[
					"Tests",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Main",
				""
			]
		],
		[
			[
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					""
				],
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					"Pandown: PDF"
				],
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					"Pandown: Plain Text"
				],
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					"Pandown: LaTeX"
				],
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					"Pandown: Word Document"
				],
				[
					"Packages/Pandown/Pandown HTML.sublime-build",
					"Pandown: Rich Text (RTF)"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					""
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Run"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Native Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: JSON"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Plain Text"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML 5"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX - PDF"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow - PDF"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: ConTeXt"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Groff Man"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: MediaWiki Markup"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Textile"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Emacs Org-Mode"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: GNU Texinfo"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DocBook XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenDocument XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenOffice Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Word Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB Book"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB3"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: FictionBooks 2"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: AsciiDoc"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slidy HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slideous HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DZSlides HTML5/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: S5 HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Rich Text (RTF)"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Beamer with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML5 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Reveal.js Slideshow"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Pandown/Pandown Markdown.sublime-build",
				"Pandown: LaTeX - PDF"
			]
		],
		[
			[
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					""
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Run"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Native Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: JSON"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Plain Text"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML 5"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX Beamer Slideshow - PDF"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: ConTeXt"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Groff Man"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: MediaWiki Markup"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Textile"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Emacs Org-Mode"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: GNU Texinfo"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DocBook XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenDocument XML"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: OpenOffice Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Word Document"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB Book"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: EPUB3"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: FictionBooks 2"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: AsciiDoc"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slidy HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Slideous HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: DZSlides HTML5/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: S5 HTML/JS Slideshow"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Rich Text (RTF)"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Markdown with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: reStructuredText with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: LaTeX with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Beamer with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: XHTML 1 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: HTML5 with Literate Haskell"
				],
				[
					"Packages/Pandown/Pandown Markdown.sublime-build",
					"Pandown: Reveal.js Slideshow"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Pandown/Pandown Markdown.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				],
				[
					"Packages/User/mypy.sublime-build",
					""
				]
			],
			[
				"Packages/Python 3/Python3.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/anaconda.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R-Box/support/R-Box.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R-Box.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					"Compile"
				]
			],
			[
				"Packages/User/ocaml.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ocaml.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					"Run"
				],
				[
					"Packages/User/ocaml.sublime-build",
					"cs3110"
				]
			],
			[
				"Packages/User/ocaml.sublime-build",
				"cs3110"
			]
		],
		[
			[
				[
					"Packages/User/ocaml.sublime-build",
					""
				],
				[
					"Packages/User/ocaml.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ocaml.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"moogle",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"moogle",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 374.0,
		"last_filter": "pro",
		"selected_items":
		[
			[
				"pro",
				"Project: Save As"
			],
			[
				"gs",
				"Git: Status"
			],
			[
				"keybi",
				"Preferences: Key Bindings - Default"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"pip",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"replipy",
				"SublimeREPL: Python - IPython"
			],
			[
				"py3",
				"Set Syntax: Python3"
			],
			[
				"back",
				"AutoBackups: Open file backup"
			],
			[
				"newbu",
				"Build: New Build System"
			],
			[
				"ocl",
				"Origami: Clone File to Pane on the Right"
			],
			[
				"oclr",
				"Origami: Clone File to Pane on the Right"
			],
			[
				"synpy",
				"Set Syntax: Python"
			],
			[
				"fr",
				"File: Rename"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"synpyno",
				"Set Syntax: IPython Notebook"
			],
			[
				"open",
				"Open IPython Notebook"
			],
			[
				"j",
				"Set Syntax: JSON"
			],
			[
				"py",
				"Set Syntax: Python3"
			],
			[
				"gdcf",
				"Git: Diff Current File"
			],
			[
				"backpu",
				"AutoBackups: Open file backup"
			],
			[
				"install",
				"Package Control: Advanced Install Package"
			],
			[
				"log",
				"Git: Log"
			],
			[
				"glog",
				"Git: Log"
			],
			[
				"gcdf",
				"Git: Diff Current File"
			],
			[
				"rn",
				"Replace Next"
			],
			[
				"synpan",
				"Set Syntax: Markdown Pandoc"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"dcf",
				"Git: Diff Current File"
			],
			[
				"dl",
				"SublimeLinter: Disable Linter"
			],
			[
				"goim",
				"Fold Python : go to import"
			],
			[
				"c1",
				"Count from 1"
			],
			[
				"line",
				"View: Toggle Line Numbers"
			],
			[
				"nebuild",
				"Build: New Build System"
			],
			[
				"speak",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"ssspeci",
				"Preferences: Syntax Specific – User"
			],
			[
				"linenum",
				"View: Toggle Line Numbers"
			],
			[
				"co",
				"Count from 1"
			],
			[
				"atab",
				"AlignTab"
			],
			[
				"disab",
				"SublimeLinter: Disable Linter"
			],
			[
				"dispa",
				"Package Control: Disable Package"
			],
			[
				"gcf",
				"Git Conflict Resolver: Find Next Conflict"
			],
			[
				"gdf",
				"Git: Diff Current File"
			],
			[
				"scop",
				"Toggle ScopeAlways"
			],
			[
				"syntaxspe",
				"Preferences: Syntax Specific – User"
			],
			[
				"anaconda",
				"Anaconda: Next lint error"
			],
			[
				"remp",
				"Package Control: Remove Package"
			],
			[
				"db",
				"Disable/Enable buildview for this window"
			],
			[
				"bhsb",
				"BracketHighlighter: Swap Brackets"
			],
			[
				"prefsyn",
				"Preferences: Syntax Specific – User"
			],
			[
				"rb",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"b",
				"Browse Mode: Current file or project"
			],
			[
				"bro",
				"Browse Mode: Current file or project"
			],
			[
				"pan",
				"Set Syntax: Markdown Pandoc"
			],
			[
				"count",
				"Count from 1"
			],
			[
				"gd",
				"Git: Diff"
			],
			[
				"gif",
				"Git: Fetch"
			],
			[
				"pys",
				"Fold Python : show documentation"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"spch",
				"Spelling: Spell Check"
			],
			[
				"rpac",
				"Package Control: Remove Package"
			],
			[
				"expand ",
				"Selection: Expand to Scope"
			],
			[
				"d",
				"Git: Diff Current File"
			],
			[
				"syncam",
				"Set Syntax: OCaml"
			],
			[
				"ocm",
				"SublimeREPL: OCaml"
			],
			[
				"ocml",
				"SublimeREPL: OCaml"
			],
			[
				"caml",
				"Set Syntax: camlp4"
			],
			[
				"sc",
				"Spelling: Spell Check"
			],
			[
				"sp",
				"SublimeREPL: PHP"
			],
			[
				"cpfr",
				"Origami: Create Pane with File on the Right"
			],
			[
				"tests",
				"Build With: Tests"
			],
			[
				"anaconda tests",
				"Anaconda: Run Project Tests"
			],
			[
				"mfnr",
				"Origami: Move File to Pane on the Right"
			],
			[
				"nn",
				"Notes: New…"
			],
			[
				"crt",
				"Markboard: Copy Rich Text"
			],
			[
				"at",
				"AlignTab"
			],
			[
				"python3",
				"Set Syntax: Python3"
			],
			[
				"difference",
				"Edit Preferences: Edit Settings — Preferences"
			],
			[
				"imp",
				"Fold Python : go to import"
			],
			[
				"ocpfr",
				"Origami: Create Pane with File on the Right"
			],
			[
				"ocfr",
				"Origami: Clone File to Pane on the Right"
			],
			[
				"cp",
				"Origami: Create Pane with File on the Right"
			],
			[
				"dbv",
				"Disable/Enable buildview for this window"
			],
			[
				"cff",
				"Code Folding: Fold"
			],
			[
				"fold",
				"Fold Python : go to siblings inverse"
			],
			[
				"backup",
				"AutoBackups: Open file backup"
			],
			[
				"sypn",
				"Set Syntax: Python"
			],
			[
				"origamicreatpanewith",
				"Origami: Create Pane with File on the Right"
			],
			[
				"syntaxsp",
				"Preferences: Syntax Specific – User"
			],
			[
				"mult",
				"MultiEditUtils: Add last selection"
			],
			[
				"c",
				"Count from 1"
			],
			[
				"multi",
				"MultiEditUtils: Add last selection"
			],
			[
				"1",
				"Indentation: Tab Width: 1"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"project",
				"Project: Save As"
			],
			[
				"projectnew",
				"Project: New Workspace for Project"
			],
			[
				"snip",
				"SnippetMaker: Make Snippet"
			],
			[
				"poj",
				"Project: Save As"
			],
			[
				"mypy",
				"Build With: mypy"
			],
			[
				"counto",
				"Count from 1"
			],
			[
				"ocaml",
				"Set Syntax: OCaml"
			],
			[
				"jekyll",
				"Jekyll: Insert current datetime"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"nj",
				"Notes: Jotter"
			],
			[
				"ni",
				"Notes: Inbox"
			],
			[
				"nl",
				"Notes: List…"
			],
			[
				"n",
				"Notes: Delete"
			],
			[
				"notes",
				"Notes: New…"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"merlin",
				"Merlin: Load a package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"table",
				"Table Editor: Enable for current syntax"
			],
			[
				"ord",
				"Origami: Destroy Current Pane"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"pandoc",
				"Set Syntax: Markdown Pandoc"
			],
			[
				"late",
				"Set Syntax: LaTeX"
			],
			[
				"scope",
				"Toggle ScopeAlways"
			],
			[
				"enableli",
				"SublimeLinter: Enable Linter"
			],
			[
				"setinte",
				"Anaconda: Set Python interpreter"
			],
			[
				"synmd",
				"Set Syntax: Markdown"
			],
			[
				"latex",
				"Set Syntax: LaTeX"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Remove Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"md",
				"Mark: Delete to Mark"
			],
			[
				"mardwon",
				"Preferences: MarkdownEditing Settings – User"
			],
			[
				"sta",
				"Git: Status"
			]
		],
		"width": 570.0
	},
	"console":
	{
		"height": 291.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			";slct",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"view.run_command('copy_edit')",
			"view.run_command",
			"sublime.log_commands(True)",
			"view.run_command('move', {'by':'words', 'extend':'true'})",
			"view.run_command('find_under_expand')",
			"view.run_command('left_delete')",
			"view.run_command('move', {'by':'words', 'forward':'false', 'extend':'true'})",
			"sublime.log_commands(True)",
			"view.settings().get('translate_tabs_to_spaces')",
			"view.run_command('insert_snippet', {\"contents\": 'try:\\n$SELECTION'})",
			"view.run_command('insert_snippet', {\"contents\": 'try:\\n$SELECTION}')",
			"view.run_command('insert_snippet', {\"contents\": try:\\n$SELECTION})",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"view.sel().add(view.find_all('line')[1])",
			"view.sel().add(view.find_all('line')[0])",
			"view.sel()[2]",
			"view.sel()[1]",
			"view.sel()[`]",
			"view.sel()[0]",
			"view.sel()",
			"view.sel(0",
			"view.sel().add(view.find_all('line')[1])",
			"view.sel().add(view.find_all('line')[1)",
			"view.sel().add(view.find_all('line')[01)",
			"view.sel().add(view.find_all('line')[0])",
			"sublime.log_commands(False)",
			"sublime.log_commands(False_",
			"view.sel().add(view.find_all('line')[0])",
			"view.sel().add(view.fin_all('line')[0])",
			"view.sel().add(view.fin_all('line')[0]",
			"view.sel()",
			"view.find_all('line')",
			"view.find_all(line)",
			"view",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"log_commands(true)",
			"s[:s.find('\\t')]",
			"'x' in 'xpe'",
			"for i in range(10), b in range(10):",
			"print([(i,a) for (i in range(10) a in range(20))])",
			"print([(i,a) for i in range(10) for a in range(20)])",
			"print [(i,a) for i in range(10) for a in range(20)]",
			"print [i,a for i in range(10) for a in range(20)]",
			"bar",
			"(foo,bar) = 7,10",
			"foo",
			"fii",
			"(foo,bar) = 7,9",
			"(foo,bar) = (7,9)",
			"bar",
			"foo, bar = 7,9",
			"bar",
			"foo",
			"foo, bar = 7,7",
			"foo, bar = 7",
			"'*'[:-1]",
			"s[:s.find('\\t')]",
			"s = 'he\\t 22\\n'",
			"s[:s.find('\\t')]",
			"'fii'[:-1]",
			"'fii'.[-1]",
			"'fii'.find('\\t')",
			"find('\\t')",
			"s[s.find('\\t')]",
			"s[s.index('\\t')]",
			"s[s.index(\\t)]",
			"l",
			"print(s)",
			"print(s",
			"s",
			"print s",
			"s",
			"s = '#\\n'",
			"float('3a')",
			"float('3a'",
			"words",
			"with 3 as s:",
			"with 3 as sO",
			"s[3]+=1",
			"s = {}",
			"str.split(' ')[0]",
			"str = 'the only one'",
			"s",
			"read_cachedir()",
			"def read_cachedir():\n    \"\"\"Read BibDesk cache dir into Python array\"\"\"\n    _data = []\n    for bib in os.listdir(BIB_DIR):\n        bib_path = os.path.join(BIB_DIR, bib)\n        with open(bib_path, 'rb') as _file:\n            #print _file.read(8) == b\"bplist00\"\n            bib_data = ccl_bplist.load(_file)\n            _file.close()\n        _data.append(bib_data)\n    return _data",
			"def read_cachedir():\n    \"\"\"Read BibDesk cache dir into Python array\"\"\"\n    _data = []\n    for bib in os.listdir(BIB_DIR):\n        bib_path = os.path.join(BIB_DIR, bib)\n        with open(bib_path, 'rb') as _file:\n            #print _file.read(8) == b\"bplist00\"\n            bib_data = ccl_bplist.load(_file)\n            _file.close()\n        _data.append(bib_data)\n        print _data\n    return _data\n",
			"read_cachedir()",
			"s[:len(s)-1]",
			"s[:len(s)]",
			"bar = s.len()",
			"return s",
			"s",
			"print s",
			"print s.len()",
			"s.len()",
			"s.length()",
			"s.length",
			"s",
			"s[:s.length()]",
			"s[:s.length]",
			"s[1:3]",
			"s[1:2]",
			"s[1,2]"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/fred/Drive/Danish-SRN/SRN"
	],
	"file_history":
	[
		"/Users/fred/Drive/Danish-SRN/SRN/experiment-log.out",
		"/Users/fred/.bash_profile",
		"/Users/fred/Drive/Danish-SRN/SRN/network.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/fred/Dropbox/usr/python/euler.py",
		"/Users/fred/grade.py/test.txt",
		"/Users/fred/grade.py/gradepy/cs1110/grade_template/tests.py",
		"/Users/fred/grade.py/gradepy/example/grade_foo/tests.py",
		"/Users/fred/grade.py/gradepy/__init__.py",
		"/Users/fred/grade.py/setup.py",
		"/Users/fred/grade.py/bin/grade.py",
		"/Users/fred/grade.py/MANIFEST.in",
		"/Users/fred/grade.py/template/tests.py",
		"/tmp/subl stdin 81eVMB.txt",
		"/tmp/subl stdin iOPV6L.txt",
		"/tmp/subl stdin VOWLbw.txt",
		"/tmp/subl stdin lx1cvO.txt",
		"/tmp/subl stdin pBK8O8.txt",
		"/Users/fred/grade.py/example/grade_foo/grade_foo.py",
		"/Users/fred/grade.py/gradepy/grade.py",
		"/Users/fred/grade.py/example/grade_foo/__init__.py",
		"/Users/fred/grade.py/example/grade_foo/master/__init__.py",
		"/Users/fred/grade.py/example/flc37/foo.py",
		"/Users/fred/grade.py/gradepy/settings.yaml",
		"/Users/fred/grade.py/example/flc37/utils.py",
		"/Users/fred/grade.py/example/grade_foo/master/utils.py",
		"/Users/fred/grade.py/gradepy/bin/grade.py",
		"/Users/fred/grade.py/example/grade_foo/master/foo.py",
		"/Users/fred/grade.py/gradepy/format.py",
		"/Users/fred/grade.py/example/grade_foo.py",
		"/Users/fred/Git/python-grading/new/foo.py",
		"/Users/fred/Git/python-grading/new/masterfoo.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2016-01-09/Users/fred/Git/python-grading/new/grade_102124.py",
		"/Users/fred/Git/python-grading/new/show_grade.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2016-01-09/Users/fred/Git/python-grading/new/show_grade_151959.py",
		"/Users/fred/Git/python-grading/new/grade.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2016-01-09/Users/fred/Git/python-grading/new/grade_153025.py",
		"/Users/fred/Git/python-grading/new/scratch.py",
		"/Users/fred/Git/python-grading/7",
		"/Users/fred/Dropbox/usr/python/testing.py",
		"/Users/fred/Git/python-grading/a7grade/masterfoo.py",
		"/Users/fred/Git/python-grading/a7grade/foo.py",
		"/Users/fred/Git/python-grading/a7grade/grade.py",
		"/Users/fred/Git/python-grading/a7grade/show_grade.py",
		"/Users/fred/Git/python-grading/a7grade/scratch.py",
		"/Users/fred/Umila/notebooks/test.ipynb",
		"/Users/fred/Dropbox/usr/python/pytest.py",
		"/Users/fred/Umila/notebooks/Master.ipynb",
		"/Users/fred/Umila/numila/main.py",
		"/Users/fred/Umila/numila/utils.py",
		"/Users/fred/Umila/numila/ngram.py",
		"/Users/fred/Umila/numila/scratch.py",
		"/Users/fred/Umila/numila/introspection.py",
		"/Users/fred/Umila/numila/junk.py",
		"/Users/fred/Umila/numila/corpora/toy_pcfg2.txt",
		"/Users/fred/Umila/numila/params.yml",
		"/Users/fred/Umila/numila/test_numila.py",
		"/Users/fred/Umila/numila/corpora/test.txt",
		"/Users/fred/Umila/numila/holograph.py",
		"/Users/fred/Umila/PhillipsPearl_Corpora/English/English-syl.txt",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/fred/Umila/writing/nunotes.md",
		"/Users/fred/Umila/numila/probgraph.py",
		"/Users/fred/Umila/numila/vectors.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2016-01-04/Users/fred/Umila/numila/numila_175526.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2016-01-04/Users/fred/Umila/numila/numila_102356.py",
		"/Users/fred/Umila/numila/test_graph.py",
		"/Users/fred/Umila/numila/graph.py",
		"/Users/fred/Umila/numila/test_vectors.py",
		"/Users/fred/Umila/numila/test_all.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/fred/Umila/numila/numila.py",
		"/Users/fred/Umila/numila/log.txt",
		"/Users/fred/Umila/numila/corpora/toy2.txt",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/Python3.sublime-settings",
		"/Users/fred/Dropbox/usr/python/utils.py",
		"/Users/fred/anaconda/lib/python3.5/site-packages/sklearn/utils/fixes.py",
		"/Users/fred/Umila/numila/pickles/prediction_matrix.pkl",
		"/Users/fred/Dropbox/usr/python/scratch.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/Users/fred/Dropbox/usr/python/mypy.py",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/Plain text.sublime-settings",
		"/Users/fred/Umila/numila/numila.sublime-project",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2015-12-08/Users/fred/Umila/writing/nunotes_213619.md",
		"/Users/fred/Umila/writing/overview/overview.md",
		"/Users/fred/Umila/numila/pcfg.py",
		"/Users/fred/Umila/README.md",
		"/Users/fred/Umila/.gitignore",
		"/Users/fred/Umila/numila/notebooks/.ipynb_checkpoints/Chunk Threshold-checkpoint.ipynb",
		"/Users/fred/Umila/numila/notes.md",
		"/Users/fred/Umila/numila/corpora/toy2-test.txt",
		"/Users/fred/Umila/numila/soldiers.py",
		"/Users/fred/Umila/writing/math/barlow-tps.md",
		"/Users/fred/Umila/writing/overview.md",
		"/Users/fred/Umila/numila/plotting.py",
		"/Users/fred/Umila/numila/toy_pcfg2.txt",
		"/Users/fred/Umila/numila/syl-test.txt",
		"/Users/fred/Umila/PhillipsPearl_Corpora/English/English/English-syl.txt",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-md3wjk/plotting.py",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-f56i_2/validation.py",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-vc5h6p/validation.p",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-wd8go9/brain_matrix.py",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-23zvmi/plotting.py",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-fvd4dz/log.txt",
		"/Users/fred/Umila/numila/typed.py",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-_jfiid/log.txt",
		"/Users/fred/Umila/numila/pseudo.md",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-_eqoxq/.bash_profile",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-7ue5ch/.bash_profile",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-lp7elq/.bash_profile",
		"/var/folders/bn/m516z3_15f387bg3y3xlrxxh0000gn/T/rsub-ujqo_2/.bash_profile",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter/Flatland Dark (SL).tmTheme",
		"//anaconda/lib/python2.7/site-packages/nose/importer.py",
		"/Users/fred/Umila/numila/report.md",
		"/Users/fred/Dropbox/Notes/quotes.md",
		"/Users/fred/Umila/numila/README.md",
		"/Users/fred/Umila/numila/.cache/v/cache/OGaml/README.md",
		"/Users/fred/Umila/numila/.cache/v/cache/lastfailed",
		"/Users/fred/Umila/numila/tiny_pcfg.txt",
		"/Users/fred/Umila/numila/test.py",
		"/Users/fred/Umila/numila/tests.py",
		"/Users/fred/Umila/numila/out.txt",
		"/Users/fred/Umila/numila/return [fibbonacci(n) if str(n) not in label else",
		"/Users/fred/Library/Application Support/Sublime Text 3/Packages/Python 3/Python3.tmLanguage",
		"/Users/fred/Library/Application Support/Sublime Text 3/Backup/AutoBackups/2015-11-02/Users/fred/Umila/numila/main_183956.py",
		"/Users/fred/Dropbox/Class/functional/recitation/concurrent/loop.ml",
		"/Users/fred/Dropbox/DropDocs/grad-apps/jones.md",
		"/Users/fred/Umila/numila/distribution.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"num_examples",
			"summ",
			"print",
			"/",
			"phonemes",
			"average_word_length",
			"$",
			"train_network",
			"retrain",
			"not",
			"+=",
			"is 1",
			"len",
			"/",
			"float",
			"/",
			"float",
			"hits",
			"/",
			"correct",
			"prediction",
			"1",
			"=",
			" =",
			"segmentation_results",
			"test_segmentation",
			" #",
			"lines",
			"fn",
			"home",
			"np.pr",
			"np",
			"max_c",
			"t",
			"primes",
			"ERROR",
			"No",
			"TestBase",
			"No testing",
			"TestBase",
			"Test",
			"Tester",
			":\n",
			"exit",
			"testing",
			"one",
			"IP",
			"tester",
			"TestClass",
			"f",
			"s",
			"self",
			"test_methods",
			"_run_test",
			"run_test",
			"mod_name",
			"file",
			"master_mod",
			"mod_name",
			"python2",
			"Tester",
			"reduce",
			"primes",
			"Find",
			"is",
			" ==",
			"literal_format",
			"literal_form",
			"fmt",
			"format",
			"fmt",
			"should be",
			"s",
			"quip",
			"takes one to ",
			"format",
			"module",
			"imp\\.",
			"imp.",
			"file",
			"re.match",
			"test_Foo",
			"StudentException",
			"cannot",
			"StudentException",
			"yield",
			"tested_func_name",
			"{",
			"explanation",
			"msg",
			"val",
			"_mistakes",
			"depends",
			"format_string",
			"ecf_mod",
			"list",
			"bad_funcs",
			"ECF",
			"tested",
			"depends",
			"an exception",
			"eval",
			"tested_func_name",
			"StudentException",
			"_compare",
			"mval",
			"note",
			"_compare",
			"s_check",
			"m_check",
			"==",
			"StudentException",
			"s_check",
			"StudentException",
			"  ",
			"z",
			"_compare",
			"print",
			"problem",
			"tested",
			"ecf",
			"to_fix",
			"_mistakes",
			"mod_name",
			"list",
			"_mistakes",
			"func",
			"func_name"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Tester",
			"    {",
			"},\n",
			"Parse",
			"create_chunk",
			"    | None -> failwith (sprintf \"item: x%s not found!\" id)\n    | Some item -> item\n  in",
			"generate_sentence",
			"self.data",
			"8",
			"c",
			"import",
			"system",
			"cat8"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "create_files.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7281,
						"regions":
						{
						},
						"selection":
						[
							[
								1168,
								1168
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "python3",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2654.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "experiment.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3744,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "python3",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "segmentation.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5171,
						"regions":
						{
						},
						"selection":
						[
							[
								4942,
								4942
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "python3",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"expand_region_settings": "{\"hash\": \"fbd8cd6e4d569a62059cc0d9587792b1\", \"stack\": [{\"end\": 4733, \"start\": 4723}, {\"end\": 4733, \"start\": 4712}, {\"end\": 4766, \"start\": 4712}]}",
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 687,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								344
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": false,
							"WordCountSyntax": "plain text",
							"auto_name": "{'boundary_F': 0.42361761949390814, 'boundary_prec",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.anaconda_documentation":
	{
		"height": 276.0
	},
	"output.autopep8":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 226.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 110.0
	},
	"output.git-pull":
	{
		"height": 110.0
	},
	"output.git-push":
	{
		"height": 110.0
	},
	"output.jotter":
	{
		"height": 110.0
	},
	"output.merlin":
	{
		"height": 110.0
	},
	"output.preferences_editor_help":
	{
		"height": 118.0
	},
	"output.scope_viewer":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "srn.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"experiment-log.out"
			],
			[
				"seg",
				"segmentation.py"
			],
			[
				"set",
				"setup.py"
			],
			[
				"se",
				"setup.py"
			],
			[
				"gg",
				"gradepy/grade.py"
			],
			[
				"grad",
				"bin/grade.py"
			],
			[
				"test",
				"gradepy/example/grade_foo/tests.py"
			],
			[
				"re",
				"README.md"
			],
			[
				"i",
				"gradepy/__init__.py"
			],
			[
				"ini",
				"gradepy/__init__.py"
			],
			[
				"gfoo",
				"example/grade_foo/grade_foo.py"
			],
			[
				"gfooin",
				"example/grade_foo/__init__.py"
			],
			[
				"gfooini",
				"example/grade_foo/__init__.py"
			],
			[
				"init",
				"gradepy/__init__.py"
			],
			[
				"gfo",
				"example/grade_foo/grade_foo.py"
			],
			[
				"gradfoo",
				"example/grade_foo/grade_foo.py"
			],
			[
				"bg",
				"bin/grade.py"
			],
			[
				"foo",
				"example/flc37/foo.py"
			],
			[
				"gradefoo",
				"example/grade_foo/__init__.py"
			],
			[
				"__init__",
				"example/grade_foo/__init__.py"
			],
			[
				"bin",
				"bin/grade.py"
			],
			[
				"gradepyin",
				"gradepy/__init__.py"
			],
			[
				"masterfoo",
				"example/grade_foo/master/foo.py"
			],
			[
				"util",
				"example/grade_foo/master/utils.py"
			],
			[
				"grade",
				"gradepy/grade.py"
			],
			[
				"__ini",
				"gradepy/__init__.py"
			],
			[
				"mas",
				"example/masterfoo.py"
			],
			[
				"",
				"example/grade_foo.py"
			],
			[
				"rea",
				"README.md"
			],
			[
				"ma",
				"masterfoo.py"
			],
			[
				"sho",
				"show_grade.py"
			],
			[
				"gr",
				"grade.py"
			],
			[
				"s",
				"scratch.py"
			],
			[
				"sc",
				"scratch.py"
			],
			[
				"mast",
				"masterfoo.py"
			],
			[
				"test.p",
				"~/Umila/notebooks/test.ipynb"
			],
			[
				"utils",
				"numila/utils.py"
			],
			[
				"hol",
				"numila/holograph.py"
			],
			[
				"par",
				"numila/params.yml"
			],
			[
				"vect",
				"numila/vectors.py"
			],
			[
				"main",
				"numila/main.py"
			],
			[
				"ngr",
				"numila/ngram.py"
			],
			[
				"nuno",
				"writing/nunotes.md"
			],
			[
				"cfg.txt",
				"numila/corpora/toy_pcfg2.txt"
			],
			[
				"probgr",
				"numila/probgraph.py"
			],
			[
				"test.txt",
				"numila/corpora/test.txt"
			],
			[
				"pa",
				"numila/params.yml"
			],
			[
				"holo",
				"numila/holograph.py"
			],
			[
				"prograp",
				"numila/probgraph.py"
			],
			[
				"testnu",
				"numila/test_numila.py"
			],
			[
				"num",
				"numila/numila.py"
			],
			[
				"vec",
				"numila/vectors.py"
			],
			[
				"mia",
				"numila/main.py"
			],
			[
				"ngra",
				"numila/ngram.py"
			],
			[
				"ho",
				"numila/holograph.py"
			],
			[
				"uti",
				"numila/utils.py"
			],
			[
				"graph",
				"numila/holograph.py"
			],
			[
				"ngram",
				"numila/ngram.py"
			],
			[
				"ngrm",
				"numila/ngram.py"
			],
			[
				"numi",
				"numila/numila.py"
			],
			[
				"nga",
				"numila/ngram.py"
			],
			[
				"m",
				"numila/main.py"
			],
			[
				"mina",
				"numila/numila.py"
			],
			[
				"log",
				"numila/log.txt"
			],
			[
				"toy2",
				"numila/corpora/toy2.txt"
			],
			[
				"ut",
				"numila/utils.py"
			],
			[
				"p",
				"numila/params.yml"
			],
			[
				"pam",
				"numila/pickles/prediction_matrix.pkl"
			],
			[
				"parm",
				"numila/params.yml"
			],
			[
				"tst",
				"numila/test_all.py"
			],
			[
				"pro",
				"numila/numila.sublime-project"
			],
			[
				"nu",
				"numila/numila.py"
			],
			[
				"notes",
				"writing/nunotes.md"
			],
			[
				"todo",
				"writing/overview/overview.md"
			],
			[
				".gi",
				"~/Umila/.gitignore"
			],
			[
				"chunk",
				"numila/notebooks/.ipynb_checkpoints/Chunk Threshold-checkpoint.ipynb"
			],
			[
				"mian",
				"numila/main.py"
			],
			[
				"pcf",
				"numila/pcfg.py"
			],
			[
				"projec",
				"numila/numila.sublime-project"
			],
			[
				"pc",
				"numila/pcfg.py"
			],
			[
				"para",
				"numila/params.yml"
			],
			[
				"pcsg",
				"~/Library/Application Support/Sublime Text 3/Packages/User/Anaconda.sublime-settings"
			],
			[
				"to",
				"numila/corpora/toy2.txt"
			],
			[
				"pcfg",
				"numila/pcfg.py"
			],
			[
				"topc",
				"numila/corpora/toy_pcfg2.txt"
			],
			[
				"corp",
				"numila/corpora/toy2.txt"
			],
			[
				"pars",
				"numila/params.yml"
			],
			[
				"note",
				"numila/notes.md"
			],
			[
				"ove",
				"writing/overview/overview.md"
			],
			[
				"ov",
				"writing/overview/overview.md"
			],
			[
				"plot",
				"plotting.py"
			],
			[
				"plo",
				"plotting.py"
			],
			[
				"not",
				"notes.md"
			],
			[
				"syl",
				"syl-test.txt"
			],
			[
				"toy2.",
				"corpora/toy2.txt"
			],
			[
				"plott",
				"plotting.py"
			],
			[
				"ve",
				"vectors.py"
			],
			[
				"vecto",
				"vectors.py"
			],
			[
				"pe",
				"pseudo.md"
			],
			[
				"u",
				"utils.py"
			],
			[
				"test.py",
				"test_all.py"
			],
			[
				"tet",
				"syl-test.txt"
			],
			[
				"pse",
				"pseudo.md"
			],
			[
				"nots",
				"notes.md"
			],
			[
				"repo",
				"report.md"
			],
			[
				"param",
				"params.yml"
			],
			[
				"noet",
				"notes.md"
			],
			[
				"uitl",
				"utils.py"
			],
			[
				"proj",
				"numila.sublime-project"
			],
			[
				"testtxt",
				"syl-test.txt"
			],
			[
				"ttxt",
				"tiny_pcfg.txt"
			],
			[
				"toy",
				"corpora/toy2.txt"
			],
			[
				"test_",
				"test_all.py"
			],
			[
				"t",
				"test.py"
			],
			[
				"bui",
				"Build output"
			],
			[
				"node",
				"notes.md"
			],
			[
				"cor",
				"corpora/toy2.txt"
			],
			[
				"dist",
				"distribution.py"
			],
			[
				"pip",
				"plotting.py"
			],
			[
				"vet",
				"vectors.py"
			],
			[
				"bea",
				"beagle.py"
			],
			[
				"uit",
				"utils.py"
			],
			[
				"top",
				"toy_pcfg2.txt"
			],
			[
				"vector",
				"vectors.py"
			],
			[
				"old",
				"oldmila.py"
			],
			[
				"dista",
				"numila/distances.csv"
			],
			[
				"typed",
				"numila/typed.py"
			],
			[
				"nots/",
				"notes/compositon.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"4",
				"~/Dropbox/Class/comp-ling/hw4/hw4.sublime-project"
			],
			[
				"",
				"~/Dropbox/Class/comp-ling/hw4/hw4.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 374.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ne",
				"neighbors"
			]
		],
		"width": 360.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 203.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
